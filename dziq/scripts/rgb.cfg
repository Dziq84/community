// RGB widget 1.1    - by Dziq (2020)


// USAGE:
// click on textures and type: /rgb
// or select mapmodel, decal, light, particles and type: /rgb
// you can change different entity types at the same time, but only last entity selected will influence current sliders positions (not a problem if you going to change colours anyway)
// if you have geometry selected and ents at the same time, only entities are going to be changed

// to change world vars (only those used to change certain colours) simply type: /rgb VAR  (example: /rgb fogcolour)

// autocomplete is present, so typing '/rgb ' (with space at the end) and pressing TAB will toggle between available vars
// or type '/rgb a' then press TAB to toggle between all available vars starting with 'a' letter




color_update = 0 ; color_update_time = 0 ; env_var = 0 ; hdr_fix = 0

env_vars_list = [
    ambient atmohazefade atmolight cloudcolour cloudlayercolour envlayercolour fogcolour fogdomecolour
    glasscolour glass2colour glass3colour glass4colour grasscolour lavacolour lava2colour lava3colour lava4colour skycolour skylight sunlight 
    watercolour waterfallcolour waterdeepcolour waterdeepfade waterrefractcolour waterfallrefractcolour
    water2colour water2fallcolour water2deepcolour water2deepfade water2refractcolour water2fallrefractcolour
    water3colour water3fallcolour water3deepcolour water3deepfade water3refractcolour water3fallrefractcolour
    water4colour water4fallcolour water4deepcolour water4deepfade water4refractcolour water4fallrefractcolour
]

rgb = [
    rgb_mode = 0 ; last_rgb_mode = 0 ; rgb_restore = 0 ; restore_button = 1 ; rgb_change_error = 2 ; rgb_change_correct_x = 0 ; rgb_change_correct_y = 0

    // entities:
    if $enthavesel [
        rgb_change_error = 0
        entloop [
            if (&& (=s $enttype "mapmodel") (!=s $enttype $last_rgb_mode)) [
                rgb_mode = (+ $rgb_mode 1) ; last_rgb_mode = $enttype
                inttorgb (entattr 7) colr colg colb ; col = [@colr @colg @colb]
            ]
            if (&& (=s $enttype "decal") (!=s $enttype $last_rgb_mode)) [
                rgb_mode = (+ $rgb_mode 1) ; last_rgb_mode = $enttype
                inttorgb (entattr 6) colr colg colb ; col = [@colr @colg @colb]
            ]
            if (&& (=s $enttype "particles") (!=s $enttype $last_rgb_mode)) [
                rgb_mode = (+ $rgb_mode 1) ; last_rgb_mode = $enttype
                inttorgb (entattr 3) colr colg colb ; col = [@colr @colg @colb]
            ]
            if (&& (=s $enttype "light") (!=s $enttype $last_rgb_mode)) [
                rgb_mode = (+ $rgb_mode 1) ; last_rgb_mode = $enttype
                col = [@(entattr 1) @(entattr 2) @(entattr 3)]
            ]
        ]
    ]

    // vcolour
    if (&& $havesel (= $rgb_mode 0)) [
        rgb_mode = -1 ; rgb_change_error = 0
        col = (getvcolour (getseltex)) ; col = [@(precf (*f (at $col 0) 255) 0) @(precf (*f (at $col 1) 255) 0) @(precf (*f (at $col 2) 255) 0)]
    ]

    // environment
    if (!=s $arg1 "") [
        rgb_mode = -2 ; rgb_change_error = 1
        if (= $mapvariant 1) [suffix = ""] [suffix = "alt"]
        looplist i $env_vars_list [
            if (=s $arg1 $i) [
                rgb_change_error = 0 ; env_var_def = $i ; env_var = (concatword $i $suffix) ; inttorgb $$env_var colr colg colb ; col = [@colr @colg @colb]
            ]
        ]
        if (= $rgb_change_error 1) [sound 35 ; echo "^frworld variable^fc"(concatword $arg1 $suffix)"^fris not supported by ^fy/rgb ^frcommand"]
    ]

    if (= $rgb_change_error 2) [sound 35 ; echo "^frnothing is selected to use with ^fy/rgb ^frcommand"]

    if (= $rgb_change_error 0) [
        // saved colours for restore button
        colrr = (at $col 0) ; colgg = (at $col 1) ; colbb = (at $col 2)
        uifade 0 ; showui rgb_change
    ]
]

listcomplete rgb $env_vars_list


uimenu "rgb_change" "" "" [
    uispace 0.008 0.004 [
        rgb_slider_delayed $col

        if (|| (&& (> $getmillis $color_update_time) (= $color_update 1)) (= $color_update 2) ) [
            if (= $color_update 1) [restore_button = 0]
            if (> $rgb_mode 0) [
                entloop [
                    // mapmodel
                    if (=s $enttype "mapmodel") [entattr 7 (rgbtoint $colr $colg $colb) ; color_update = 0]
                    // decal
                    if (=s $enttype "decal") [entattr 6 (rgbtoint $colr $colg $colb) ; color_update = 0]
                    // particles
                    if (=s $enttype "particles") [entattr 3 (rgbtoint $colr $colg $colb) ; color_update = 0]
                    // light
                    if (=s $enttype "light") [entattr 1 $colr ; entattr 2 $colg ; entattr 3 $colb ; color_update = 0]
                ]
            ]
            // vcolour
            if (= $rgb_mode -1) [vcolour (divf $colr 255) (divf $colg 255) (divf $colb 255) ; color_update = 0]
            // environment
            if (= $rgb_mode -2) [$env_var $colr $colg $colb ; color_update = 0]
        ]
    ]
][] [] [uialign 1 -1 ; uispace (+f 0.210 $rgb_change_correct_x) (+f 0.098 $rgb_change_correct_y)] [2] [uiclose rgb_change ; sleep 250 [uifade (getvardef uifade)]]


rgb_slider_delayed = [
    colr = (at $col 0) ; colg = (at $col 1) ; colb = (at $col 2)

    uivlist 0 [
        if (= $rgb_mode 1) [uitext (format "^fc%1" $enttype ) 1]
        if (> $rgb_mode 1) [uitext "^fcmultiple ent types" 1]
        if (= $rgb_mode -1) [uitext "texture colour" 1]
        if (= $rgb_mode -2) [uitext (format "^fc%1" $env_var ) 1]
        uispace 0 0.004

        loop i 3 [
            n = [col@(at "r g b" $i)] ; if (> $$n 255) [$n = 255 ; col@(at "r g b" $i) = 255 ; hdr_fix = 1]
            uihlist $ui_padbutton [
                uifill 0.024 0.001 [
                    uivlist 0 [
                        uitextaligned (at $col $i) 0.8 [-1]
                    ]
                ]
                uialign 1 0
                uivlist 0 [
                    uihcolourslider $n 0 255 0x000000 (at [0xFF0000 0x00FF00 0x0000FF] $i) $ui_rgbw $ui_rgbh [col = [@colr @colg @colb] ; color_update_time = (+ $getmillis 1000) ; color_update = 1]
                ]
            ]
        ]
        if $hdr_fix [col = [@colr @colg @colb] ; hdr_fix = 0]

        uispace 0 0.01
        if (= $rgb_mode -2) [
            // copy from second variant button
            if (= $mapvariant 1) [a = "variant 2"] [a = "variant 1"]
            uibutton (format "copy from '%1'" $a) 0.1 [] [
                if (= $mapvariant 1) [
                    inttorgb $(concatword $env_var "alt") colr colg colb ; col = [@colr @colg @colb] ; echo $env_var
                ] [
                    inttorgb $$env_var_def colr colg colb ; col = [@colr @colg @colb]
                ]
                restore_button = 0 ; color_update = 2
            ] [] [] [] [] [] $colourwhite [] [] 1
            rgb_change_correct_x = 0.002
            rgb_change_correct_y = 0.0142
            uispace 0 0.004
            // fog: fogdomecolour apply button
            if (strncmp "fogcolour" $env_var 9) [
                uibutton "apply as fogdomecolour" 0.1 [] [
                    (concatword "fogdomecolour" $suffix) $colr $colg $colb
                ] [] [] [] [] [] $colourwhite [] [] 1
                rgb_change_correct_x = (+f $rgb_change_correct_x 0.014)
                rgb_change_correct_y = (+f $rgb_change_correct_y 0.0155)
                uispace 0 0.004
            ]
            // fogdome: fogcolour apply button
            if (strncmp "fogdomecolour" $env_var 13) [
                uibutton "apply as fogcolour" 0.1 [] [
                    (concatword "fogcolour" $suffix) $colr $colg $colb
                ] [] [] [] [] [] $colourwhite [] [] 1
                rgb_change_correct_y = (+f $rgb_change_correct_y 0.0155)
                uispace 0 0.004
            ]
        ]

        uibutton "RESTORE" 0.1 [] [
            color_update = 2 ; restore_button = 1
            col = [@colrr @colgg @colbb] ; colr = $colrr ; colg = $colgg ; colb = $colbb
        ] [] [] $restore_button [] [] $colourwhite [] [] 1
    ]
]